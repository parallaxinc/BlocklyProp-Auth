/**
 * This class is generated by jOOQ
 */
package com.parallax.server.blocklypropauth.db.generated.tables.records;


import com.parallax.server.blocklypropauth.db.generated.tables.Session;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionRecord extends UpdatableRecordImpl<SessionRecord> implements Record6<String, Timestamp, Timestamp, Long, String, byte[]> {

	private static final long serialVersionUID = 1424467815;

	/**
	 * Setter for <code>blocklypropauth.session.idsession</code>.
	 */
	public void setIdsession(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.idsession</code>.
	 */
	public String getIdsession() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>blocklypropauth.session.startTimestamp</code>.
	 */
	public void setStarttimestamp(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.startTimestamp</code>.
	 */
	public Timestamp getStarttimestamp() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>blocklypropauth.session.lastAccessTime</code>.
	 */
	public void setLastaccesstime(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.lastAccessTime</code>.
	 */
	public Timestamp getLastaccesstime() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>blocklypropauth.session.timeout</code>.
	 */
	public void setTimeout(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.timeout</code>.
	 */
	public Long getTimeout() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>blocklypropauth.session.host</code>.
	 */
	public void setHost(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.host</code>.
	 */
	public String getHost() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>blocklypropauth.session.attributes</code>.
	 */
	public void setAttributes(byte[] value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>blocklypropauth.session.attributes</code>.
	 */
	public byte[] getAttributes() {
		return (byte[]) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Timestamp, Timestamp, Long, String, byte[]> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<String, Timestamp, Timestamp, Long, String, byte[]> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Session.SESSION.IDSESSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return Session.SESSION.STARTTIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Session.SESSION.LASTACCESSTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return Session.SESSION.TIMEOUT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Session.SESSION.HOST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field6() {
		return Session.SESSION.ATTRIBUTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getIdsession();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getStarttimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getLastaccesstime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getTimeout();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getHost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value6() {
		return getAttributes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value1(String value) {
		setIdsession(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value2(Timestamp value) {
		setStarttimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value3(Timestamp value) {
		setLastaccesstime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value4(Long value) {
		setTimeout(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value5(String value) {
		setHost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord value6(byte[] value) {
		setAttributes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionRecord values(String value1, Timestamp value2, Timestamp value3, Long value4, String value5, byte[] value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SessionRecord
	 */
	public SessionRecord() {
		super(Session.SESSION);
	}

	/**
	 * Create a detached, initialised SessionRecord
	 */
	public SessionRecord(String idsession, Timestamp starttimestamp, Timestamp lastaccesstime, Long timeout, String host, byte[] attributes) {
		super(Session.SESSION);

		setValue(0, idsession);
		setValue(1, starttimestamp);
		setValue(2, lastaccesstime);
		setValue(3, timeout);
		setValue(4, host);
		setValue(5, attributes);
	}
}
